package com.rila13.hibernate.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 */
public class BaseJouePK implements Serializable {

	private int hashCode = Integer.MIN_VALUE;

	private com.rila13.hibernate.Films _codeF;
	private com.rila13.hibernate.Acteurs _codeA;

	public BaseJouePK () {}
	
	public BaseJouePK (
		com.rila13.hibernate.Films _codeF,
		com.rila13.hibernate.Acteurs _codeA) {

		this.setCodeF(_codeF);
		this.setCodeA(_codeA);
	}


	public com.rila13.hibernate.Films getCodeF () {
		return _codeF;
	}

	public void setCodeF (com.rila13.hibernate.Films _codeF) {
		hashCode = Integer.MIN_VALUE;
		this._codeF = _codeF;
	}

	public com.rila13.hibernate.Acteurs getCodeA () {
		return _codeA;
	}

	public void setCodeA (com.rila13.hibernate.Acteurs _codeA) {
		hashCode = Integer.MIN_VALUE;
		this._codeA = _codeA;
	}

	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof com.rila13.hibernate.JouePK)) return false;
		else {
			com.rila13.hibernate.JouePK mObj = (com.rila13.hibernate.JouePK) obj;
			if (null != this.getCodeF() && null != mObj.getCodeF()) {
				if (!this.getCodeF().equals(mObj.getCodeF())) {
					return false;
				}
			}
			else {
				return false;
			}
			if (null != this.getCodeA() && null != mObj.getCodeA()) {
				if (!this.getCodeA().equals(mObj.getCodeA())) {
					return false;
				}
			}
			else {
				return false;
			}
			return true;
		}
	}

	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			StringBuffer sb = new StringBuffer();
			if (null != this.getCodeF()) {
				sb.append(this.getCodeF().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			if (null != this.getCodeA()) {
				sb.append(this.getCodeA().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			this.hashCode = sb.toString().hashCode();
		}
		return this.hashCode;
	}

}